@import './button-size';
@import '../../utils/theme/color-theme.scss';

// $filled: '[type="filled"i]';
$outlined: '[type="outlined"i]';

%button {
  --button-inline-space-between-size: 1rem;
  --button-padding-inline-size: 2.5rem;
  font: inherit;
  font-variation-settings: inherit;
  position: relative;
  block-size: var(--size-block, initial);
  min-inline-size: var(--button-size-inline, initial);
  border-radius: var(--border-radius);
  box-sizing: border-box;
  outline: none;
  padding-inline-start: var(--button-padding-inline-size);
  padding-inline-end: var(--button-padding-inline-size);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  cursor: pointer;
  user-select: none;
}

@mixin button-host {
  // @include oai-font-body-2;
  font: var(--font-body-2);

  ::slotted([slot="prefix"i]) {
    margin-inline-end: var(--button-inline-space-between-size);
  }

  ::slotted([slot="suffix"i]) {
    margin-inline-start: var(--button-inline-space-between-size);
  }

  .pending-indicator {
    position: absolute;
    left: calc(var(--button-padding-inline-size) / 2);
    transform: translateX(-50%);
  }
}

@mixin button {
  @extend %button;

  // filled is the default
  :host(:not(#{$outlined})) & {
    border: 0 none;
    background-color: var(--oai-color-base);
    color: var(--oai-color-contrast);
    transition: box-shadow .2s,
      background-color .5s;
    will-change: box-shadow,
      background-color;

    &:not(:disabled):not(:active) {
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);

      &:hover {
        background-color: var(--oai-color-tint);
        box-shadow: 0 0 2px rgba(0, 0, 0, 0.24);
      }
    }

    &:disabled {
      background-color: var(--oai-color-dim);
    }

  }

  :host(#{$outlined}) & {
    color: var(--oai-color-base);
    background-color: transparent;
    border-color: currentColor;
    border-style: solid;
    border-width: 1px;
    transition: background-color .2s,
      color .2s;
    will-change: background-color, color;

    &:focus {
      background-color: var(--oai-color-shade);
      color: var(--oai-color-contrast);
    }

    // &:not(:disabled):hover {
    //   background-color: #{$bgColor};
    //   color: var(--oai-color-contrast);
    // }

    &:focus,
    &:not(:disabled):hover {
      $tintColor: var(--oai-color-tint);
      color: var(--oai-color-contrast);
      background-color: #{$tintColor};
      border-color: #{$tintColor};
    }

    &:disabled {
      color: var(--oai-color-dim);
    }

  }
}
